From 9699188584e9234bedbf1924cf92b45438d709b5 Mon Sep 17 00:00:00 2001
From: Sergio Pena <sergio.pena@cloudera.com>
Date: Wed, 30 May 2018 09:31:35 -0500
Subject: [PATCH 1395/1431] CDH-68532: HIVE-19372: Add table ownerType to
 JDO/SQL and ObjectStore (Sergio Pena, reviewed by
 Vihang Karajgaonkar)

==C5_FEATURE_FGP==

Change-Id: I133f2b8582abe06c4172e0770fcff194261c587e
---
 .../scripts/upgrade/derby/041-HIVE-19372.derby.sql |    1 +
 .../scripts/upgrade/derby/cdh.upgrade.order.derby  |    3 ++-
 .../upgrade/derby/hive-schema-1.1.0.derby.sql      |    4 ++--
 ...de-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.derby.sql |    5 +++++
 .../scripts/upgrade/mssql/026-HIVE-19372.mssql.sql |    1 +
 .../scripts/upgrade/mssql/cdh.upgrade.order.mssql  |    3 ++-
 .../upgrade/mssql/hive-schema-1.1.0.mssql.sql      |    3 ++-
 ...e-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.msssql.sql |    6 ++++++
 .../scripts/upgrade/mysql/041-HIVE-19372.mysql.sql |    1 +
 .../scripts/upgrade/mysql/cdh.upgrade.order.mysql  |    3 ++-
 .../upgrade/mysql/hive-schema-1.1.0.mysql.sql      |    3 ++-
 ...de-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.mysql.sql |    6 ++++++
 .../upgrade/oracle/041-HIVE-19372.oracle.sql       |    1 +
 .../upgrade/oracle/cdh.upgrade.order.oracle        |    3 ++-
 .../upgrade/oracle/hive-schema-1.1.0.oracle.sql    |    3 ++-
 ...e-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.oracle.sql |    6 ++++++
 .../upgrade/postgres/040-HIVE-19372.postgres.sql   |    1 +
 .../upgrade/postgres/cdh.upgrade.order.postgres    |    3 ++-
 .../postgres/hive-schema-1.1.0.postgres.sql        |    3 ++-
 ...1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.postgres.sql |    6 ++++++
 .../apache/hadoop/hive/metastore/ObjectStore.java  |   20 +++++++++++++++++---
 .../apache/hadoop/hive/metastore/model/MTable.java |   19 ++++++++++++++++++-
 metastore/src/model/package.jdo                    |    3 +++
 .../hadoop/hive/metastore/TestObjectStore.java     |   10 ++++++++++
 24 files changed, 102 insertions(+), 15 deletions(-)
 create mode 100644 metastore/scripts/upgrade/derby/041-HIVE-19372.derby.sql
 create mode 100644 metastore/scripts/upgrade/derby/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.derby.sql
 create mode 100644 metastore/scripts/upgrade/mssql/026-HIVE-19372.mssql.sql
 create mode 100644 metastore/scripts/upgrade/mssql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.msssql.sql
 create mode 100644 metastore/scripts/upgrade/mysql/041-HIVE-19372.mysql.sql
 create mode 100644 metastore/scripts/upgrade/mysql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.mysql.sql
 create mode 100644 metastore/scripts/upgrade/oracle/041-HIVE-19372.oracle.sql
 create mode 100644 metastore/scripts/upgrade/oracle/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.oracle.sql
 create mode 100644 metastore/scripts/upgrade/postgres/040-HIVE-19372.postgres.sql
 create mode 100644 metastore/scripts/upgrade/postgres/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.postgres.sql

diff --git a/metastore/scripts/upgrade/derby/041-HIVE-19372.derby.sql b/metastore/scripts/upgrade/derby/041-HIVE-19372.derby.sql
new file mode 100644
index 0000000..4119607
--- /dev/null
+++ b/metastore/scripts/upgrade/derby/041-HIVE-19372.derby.sql
@@ -0,0 +1 @@
+ALTER TABLE "APP"."TBLS" ADD COLUMN "OWNER_TYPE" VARCHAR(10);
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/derby/cdh.upgrade.order.derby b/metastore/scripts/upgrade/derby/cdh.upgrade.order.derby
index 9c28af4..53fe6fc 100644
--- a/metastore/scripts/upgrade/derby/cdh.upgrade.order.derby
+++ b/metastore/scripts/upgrade/derby/cdh.upgrade.order.derby
@@ -1 +1,2 @@
-1.1.0-to-1.1.0-cdh5.12.0
\ No newline at end of file
+1.1.0-to-1.1.0-cdh5.12.0
+1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/derby/hive-schema-1.1.0.derby.sql b/metastore/scripts/upgrade/derby/hive-schema-1.1.0.derby.sql
index 3ccf365..d349f46 100644
--- a/metastore/scripts/upgrade/derby/hive-schema-1.1.0.derby.sql
+++ b/metastore/scripts/upgrade/derby/hive-schema-1.1.0.derby.sql
@@ -60,7 +60,7 @@ CREATE TABLE "APP"."COLUMNS" ("SD_ID" BIGINT NOT NULL, "COMMENT" VARCHAR(256), "
 
 CREATE TABLE "APP"."ROLES" ("ROLE_ID" BIGINT NOT NULL, "CREATE_TIME" INTEGER NOT NULL, "OWNER_NAME" VARCHAR(128), "ROLE_NAME" VARCHAR(128));
 
-CREATE TABLE "APP"."TBLS" ("TBL_ID" BIGINT NOT NULL, "CREATE_TIME" INTEGER NOT NULL, "DB_ID" BIGINT, "LAST_ACCESS_TIME" INTEGER NOT NULL, "OWNER" VARCHAR(767), "RETENTION" INTEGER NOT NULL, "SD_ID" BIGINT, "TBL_NAME" VARCHAR(128), "TBL_TYPE" VARCHAR(128), "VIEW_EXPANDED_TEXT" LONG VARCHAR, "VIEW_ORIGINAL_TEXT" LONG VARCHAR);
+CREATE TABLE "APP"."TBLS" ("TBL_ID" BIGINT NOT NULL, "CREATE_TIME" INTEGER NOT NULL, "DB_ID" BIGINT, "LAST_ACCESS_TIME" INTEGER NOT NULL, "OWNER" VARCHAR(767), "OWNER_TYPE" VARCHAR(10), "RETENTION" INTEGER NOT NULL, "SD_ID" BIGINT, "TBL_NAME" VARCHAR(128), "TBL_TYPE" VARCHAR(128), "VIEW_EXPANDED_TEXT" LONG VARCHAR, "VIEW_ORIGINAL_TEXT" LONG VARCHAR);
 
 CREATE TABLE "APP"."PARTITION_KEYS" ("TBL_ID" BIGINT NOT NULL, "PKEY_COMMENT" VARCHAR(4000), "PKEY_NAME" VARCHAR(128) NOT NULL, "PKEY_TYPE" VARCHAR(767) NOT NULL, "INTEGER_IDX" INTEGER NOT NULL);
 
@@ -338,5 +338,5 @@ ALTER TABLE "APP".VERSION ADD COLUMN SCHEMA_VERSION_V2 VARCHAR(255);
 -- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 -- Record schema version. Should be the last step in the init script. Starting CDH-5.12.0 SCHEMA_VERSION_V2 version should record in the CDH specific schema version as well
 -- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-INSERT INTO "APP"."VERSION" (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.12.0', 'Hive release version 1.1.0');
+INSERT INTO "APP"."VERSION" (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.16.0', 'Hive release version 1.1.0');
 
diff --git a/metastore/scripts/upgrade/derby/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.derby.sql b/metastore/scripts/upgrade/derby/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.derby.sql
new file mode 100644
index 0000000..52eac64
--- /dev/null
+++ b/metastore/scripts/upgrade/derby/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.derby.sql
@@ -0,0 +1,5 @@
+-- Upgrade MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0
+
+RUN '041-HIVE-19372.derby.sql';
+
+UPDATE "APP".VERSION SET SCHEMA_VERSION='1.1.0', VERSION_COMMENT='Hive release version 1.1.0', SCHEMA_VERSION_V2='1.1.0-cdh5.16.0' where VER_ID=1;
diff --git a/metastore/scripts/upgrade/mssql/026-HIVE-19372.mssql.sql b/metastore/scripts/upgrade/mssql/026-HIVE-19372.mssql.sql
new file mode 100644
index 0000000..2b501bd
--- /dev/null
+++ b/metastore/scripts/upgrade/mssql/026-HIVE-19372.mssql.sql
@@ -0,0 +1 @@
+ALTER TABLE TBLS ADD OWNER_TYPE nvarchar(10) NULL;
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/mssql/cdh.upgrade.order.mssql b/metastore/scripts/upgrade/mssql/cdh.upgrade.order.mssql
index 9c28af4..53fe6fc 100644
--- a/metastore/scripts/upgrade/mssql/cdh.upgrade.order.mssql
+++ b/metastore/scripts/upgrade/mssql/cdh.upgrade.order.mssql
@@ -1 +1,2 @@
-1.1.0-to-1.1.0-cdh5.12.0
\ No newline at end of file
+1.1.0-to-1.1.0-cdh5.12.0
+1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/mssql/hive-schema-1.1.0.mssql.sql b/metastore/scripts/upgrade/mssql/hive-schema-1.1.0.mssql.sql
index 16ca1cc..0431d7c 100644
--- a/metastore/scripts/upgrade/mssql/hive-schema-1.1.0.mssql.sql
+++ b/metastore/scripts/upgrade/mssql/hive-schema-1.1.0.mssql.sql
@@ -353,6 +353,7 @@ CREATE TABLE TBLS
     DB_ID bigint NULL,
     LAST_ACCESS_TIME int NOT NULL,
     OWNER varchar(767) NULL,
+    OWNER_TYPE nvarchar(10) NULL,
     RETENTION int NOT NULL,
     SD_ID bigint NULL,
     TBL_NAME varchar(128) NULL,
@@ -948,4 +949,4 @@ ALTER TABLE VERSION ADD SCHEMA_VERSION_V2 VARCHAR(255);
 -- -----------------------------------------------------------------------------------------------------------------------------------------
 -- Record schema version. Should be the last step in the init script. Starting CDH-5.13.0 CDH version must be included in the schema version
 -- -----------------------------------------------------------------------------------------------------------------------------------------
-INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.12.0', 'Hive release version 1.1.0');
+INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.16.0', 'Hive release version 1.1.0');
diff --git a/metastore/scripts/upgrade/mssql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.msssql.sql b/metastore/scripts/upgrade/mssql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.msssql.sql
new file mode 100644
index 0000000..026437e
--- /dev/null
+++ b/metastore/scripts/upgrade/mssql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.msssql.sql
@@ -0,0 +1,6 @@
+SELECT 'Upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0' AS MESSAGE;
+
+:r 026-HIVE-19372.mssql.sql
+
+UPDATE VERSION SET SCHEMA_VERSION='1.1.0', VERSION_COMMENT='Hive release version 1.1.0', SCHEMA_VERSION_V2='1.1.0-cdh5.16.0' where VER_ID=1;
+SELECT 'Finished upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0' AS MESSAGE;
diff --git a/metastore/scripts/upgrade/mysql/041-HIVE-19372.mysql.sql b/metastore/scripts/upgrade/mysql/041-HIVE-19372.mysql.sql
new file mode 100644
index 0000000..da4aff7
--- /dev/null
+++ b/metastore/scripts/upgrade/mysql/041-HIVE-19372.mysql.sql
@@ -0,0 +1 @@
+ALTER TABLE `TBLS` ADD COLUMN `OWNER_TYPE` VARCHAR(10) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL;
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/mysql/cdh.upgrade.order.mysql b/metastore/scripts/upgrade/mysql/cdh.upgrade.order.mysql
index 9c28af4..53fe6fc 100644
--- a/metastore/scripts/upgrade/mysql/cdh.upgrade.order.mysql
+++ b/metastore/scripts/upgrade/mysql/cdh.upgrade.order.mysql
@@ -1 +1,2 @@
-1.1.0-to-1.1.0-cdh5.12.0
\ No newline at end of file
+1.1.0-to-1.1.0-cdh5.12.0
+1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/mysql/hive-schema-1.1.0.mysql.sql b/metastore/scripts/upgrade/mysql/hive-schema-1.1.0.mysql.sql
index 3bd0c9a..dffecd7 100644
--- a/metastore/scripts/upgrade/mysql/hive-schema-1.1.0.mysql.sql
+++ b/metastore/scripts/upgrade/mysql/hive-schema-1.1.0.mysql.sql
@@ -584,6 +584,7 @@ CREATE TABLE IF NOT EXISTS `TBLS` (
   `DB_ID` bigint(20) DEFAULT NULL,
   `LAST_ACCESS_TIME` int(11) NOT NULL,
   `OWNER` varchar(767) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
+  `OWNER_TYPE` varchar(10) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
   `RETENTION` int(11) NOT NULL,
   `SD_ID` bigint(20) DEFAULT NULL,
   `TBL_NAME` varchar(128) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
@@ -830,7 +831,7 @@ ALTER TABLE VERSION ADD COLUMN SCHEMA_VERSION_V2 VARCHAR(255);
 -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 -- Record schema version. Should be the last step in the init script. Starting CDH-5.12.0 the CDH specific schema version should also be recored in SCHEMA_VERSION_V2
 -- ------------------------------------------------------------------------------------------------------------------------------------------------------------------
-INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.12.0', 'Hive release version 1.1.0');
+INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.16.0', 'Hive release version 1.1.0');
 
 /*!40101 SET character_set_client = @saved_cs_client */;
 /*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
diff --git a/metastore/scripts/upgrade/mysql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.mysql.sql b/metastore/scripts/upgrade/mysql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.mysql.sql
new file mode 100644
index 0000000..47a0edf
--- /dev/null
+++ b/metastore/scripts/upgrade/mysql/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.mysql.sql
@@ -0,0 +1,6 @@
+-- Upgrade MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0
+
+SOURCE 041-HIVE-19372.mysql.sql;
+
+UPDATE VERSION SET SCHEMA_VERSION='1.1.0', VERSION_COMMENT='Hive release version 1.1.0', SCHEMA_VERSION_V2='1.1.0-cdh5.16.0' where VER_ID=1;
+SELECT 'Finished upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0' AS ' ';
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/oracle/041-HIVE-19372.oracle.sql b/metastore/scripts/upgrade/oracle/041-HIVE-19372.oracle.sql
new file mode 100644
index 0000000..98264f3
--- /dev/null
+++ b/metastore/scripts/upgrade/oracle/041-HIVE-19372.oracle.sql
@@ -0,0 +1 @@
+ALTER TABLE TBLS ADD OWNER_TYPE VARCHAR2(10) NULL;
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/oracle/cdh.upgrade.order.oracle b/metastore/scripts/upgrade/oracle/cdh.upgrade.order.oracle
index 9c28af4..53fe6fc 100644
--- a/metastore/scripts/upgrade/oracle/cdh.upgrade.order.oracle
+++ b/metastore/scripts/upgrade/oracle/cdh.upgrade.order.oracle
@@ -1 +1,2 @@
-1.1.0-to-1.1.0-cdh5.12.0
\ No newline at end of file
+1.1.0-to-1.1.0-cdh5.12.0
+1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/oracle/hive-schema-1.1.0.oracle.sql b/metastore/scripts/upgrade/oracle/hive-schema-1.1.0.oracle.sql
index 64269c3..bf3b72e 100644
--- a/metastore/scripts/upgrade/oracle/hive-schema-1.1.0.oracle.sql
+++ b/metastore/scripts/upgrade/oracle/hive-schema-1.1.0.oracle.sql
@@ -370,6 +370,7 @@ CREATE TABLE TBLS
     DB_ID NUMBER NULL,
     LAST_ACCESS_TIME NUMBER (10) NOT NULL,
     OWNER VARCHAR2(767) NULL,
+    OWNER_TYPE VARCHAR2(10) NULL,
     RETENTION NUMBER (10) NOT NULL,
     SD_ID NUMBER NULL,
     TBL_NAME VARCHAR2(128) NULL,
@@ -791,4 +792,4 @@ ALTER TABLE VERSION ADD SCHEMA_VERSION_V2 VARCHAR2(255);
 -- -----------------------------------------------------------------
 -- Record schema version. Should be the last step in the init script. Starting CDH5.12.0 SCHEMA_VERSION_V2 must include the CDH schema version as well
 -- -----------------------------------------------------------------
-INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.12.0', 'Hive release version 1.1.0');
+INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, SCHEMA_VERSION_V2, VERSION_COMMENT) VALUES (1, '1.1.0', '1.1.0-cdh5.16.0', 'Hive release version 1.1.0');
diff --git a/metastore/scripts/upgrade/oracle/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.oracle.sql b/metastore/scripts/upgrade/oracle/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.oracle.sql
new file mode 100644
index 0000000..13249c3
--- /dev/null
+++ b/metastore/scripts/upgrade/oracle/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.oracle.sql
@@ -0,0 +1,6 @@
+-- Upgrade MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0
+
+@041-HIVE-19372.oracle.sql;
+
+UPDATE VERSION SET SCHEMA_VERSION='1.1.0', VERSION_COMMENT='Hive release version 1.1.0', SCHEMA_VERSION_V2='1.1.0-cdh5.16.0' where VER_ID=1;
+SELECT 'Finished upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0' AS Status from dual;
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/postgres/040-HIVE-19372.postgres.sql b/metastore/scripts/upgrade/postgres/040-HIVE-19372.postgres.sql
new file mode 100644
index 0000000..dfa469c
--- /dev/null
+++ b/metastore/scripts/upgrade/postgres/040-HIVE-19372.postgres.sql
@@ -0,0 +1 @@
+ALTER TABLE "TBLS" ADD COLUMN "OWNER_TYPE" character varying(10) DEFAULT NULL::character varying;
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/postgres/cdh.upgrade.order.postgres b/metastore/scripts/upgrade/postgres/cdh.upgrade.order.postgres
index 9c28af4..53fe6fc 100644
--- a/metastore/scripts/upgrade/postgres/cdh.upgrade.order.postgres
+++ b/metastore/scripts/upgrade/postgres/cdh.upgrade.order.postgres
@@ -1 +1,2 @@
-1.1.0-to-1.1.0-cdh5.12.0
\ No newline at end of file
+1.1.0-to-1.1.0-cdh5.12.0
+1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0
\ No newline at end of file
diff --git a/metastore/scripts/upgrade/postgres/hive-schema-1.1.0.postgres.sql b/metastore/scripts/upgrade/postgres/hive-schema-1.1.0.postgres.sql
index 86d92d3..ae3c4bc 100644
--- a/metastore/scripts/upgrade/postgres/hive-schema-1.1.0.postgres.sql
+++ b/metastore/scripts/upgrade/postgres/hive-schema-1.1.0.postgres.sql
@@ -380,6 +380,7 @@ CREATE TABLE "TBLS" (
     "DB_ID" bigint,
     "LAST_ACCESS_TIME" bigint NOT NULL,
     "OWNER" character varying(767) DEFAULT NULL::character varying,
+    "OWNER_TYPE" character varying(10) DEFAULT NULL::character varying,
     "RETENTION" bigint NOT NULL,
     "SD_ID" bigint,
     "TBL_NAME" character varying(128) DEFAULT NULL::character varying,
@@ -1496,4 +1497,4 @@ ALTER TABLE "VERSION" ADD COLUMN "SCHEMA_VERSION_V2" VARCHAR(255);
 -- ------------------------------------------------------------------------------------------------------------------------------
 -- Record schema version. Should be the last step in the init script. Starting CDH-5.12.0 SCHEMA_VERSION_V2 must include CDH schema version as well
 -- ------------------------------------------------------------------------------------------------------------------------------
-INSERT INTO "VERSION" ("VER_ID", "SCHEMA_VERSION", "SCHEMA_VERSION_V2", "VERSION_COMMENT") VALUES (1, '1.1.0', '1.1.0-cdh5.12.0', 'Hive release version 1.1.0');
+INSERT INTO "VERSION" ("VER_ID", "SCHEMA_VERSION", "SCHEMA_VERSION_V2", "VERSION_COMMENT") VALUES (1, '1.1.0', '1.1.0-cdh5.16.0', 'Hive release version 1.1.0');
diff --git a/metastore/scripts/upgrade/postgres/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.postgres.sql b/metastore/scripts/upgrade/postgres/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.postgres.sql
new file mode 100644
index 0000000..cb28dea
--- /dev/null
+++ b/metastore/scripts/upgrade/postgres/upgrade-1.1.0-cdh5.12.0-to-1.1.0-cdh5.16.0.postgres.sql
@@ -0,0 +1,6 @@
+SELECT 'Upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0';
+
+\i 042-HIVE-19372.postgres.sql;
+
+UPDATE "VERSION" SET "SCHEMA_VERSION"='1.1.0', "VERSION_COMMENT"='Hive release version 1.1.0', "SCHEMA_VERSION_V2"='1.1.0-cdh5.16.0' where "VER_ID"=1;
+SELECT 'Finished upgrading MetaStore schema from 1.1.0-cdh5.12.0 to 1.1.0-cdh5.16.0';
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
index 31f873e..ad5a766 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
@@ -165,7 +165,7 @@
 import org.datanucleus.store.rdbms.exceptions.MissingTableException;
 
 import com.google.common.collect.Lists;
-
+import com.google.common.base.Strings;
 
 /**
  * This class is the interface between the application logic and the database
@@ -1289,11 +1289,21 @@ private Table convertToTable(MTable mtbl) throws MetaException {
         tableType = TableType.MANAGED_TABLE.toString();
       }
     }
-    return new Table(mtbl.getTableName(), mtbl.getDatabase().getName(), mtbl
+    Table t = new Table(mtbl.getTableName(), mtbl.getDatabase().getName(), mtbl
         .getOwner(), mtbl.getCreateTime(), mtbl.getLastAccessTime(), mtbl
         .getRetention(), convertToStorageDescriptor(mtbl.getSd()),
         convertToFieldSchemas(mtbl.getPartitionKeys()), convertMap(mtbl.getParameters()),
         mtbl.getViewOriginalText(), mtbl.getViewExpandedText(), tableType);
+
+    if (Strings.isNullOrEmpty(mtbl.getOwnerType())) {
+      // Before the ownerType exists in an old Hive schema, USER was the default type for owner.
+      // Let's set the default to USER to keep backward compatibility.
+      t.setOwnerType(PrincipalType.USER);
+    } else {
+      t.setOwnerType(PrincipalType.valueOf(mtbl.getOwnerType()));
+    }
+
+    return t;
   }
 
   private MTable convertToMTable(Table tbl) throws InvalidObjectException,
@@ -1325,9 +1335,12 @@ private MTable convertToMTable(Table tbl) throws InvalidObjectException,
       }
     }
 
+    PrincipalType ownerPrincipalType = tbl.getOwnerType();
+    String ownerType = (ownerPrincipalType == null) ? PrincipalType.USER.name() : ownerPrincipalType.name();
+
     // A new table is always created with a new column descriptor
     return new MTable(HiveStringUtils.normalizeIdentifier(tbl.getTableName()), mdb,
-        convertToMStorageDescriptor(tbl.getSd()), tbl.getOwner(), tbl
+        convertToMStorageDescriptor(tbl.getSd()), tbl.getOwner(), ownerType, tbl
             .getCreateTime(), tbl.getLastAccessTime(), tbl.getRetention(),
         convertToMFieldSchemas(tbl.getPartitionKeys()), tbl.getParameters(),
         tbl.getViewOriginalText(), tbl.getViewExpandedText(),
@@ -3138,6 +3151,7 @@ public void alterTable(String dbname, String name, Table newTable)
       oldt.setTableName(HiveStringUtils.normalizeIdentifier(newt.getTableName()));
       oldt.setParameters(newt.getParameters());
       oldt.setOwner(newt.getOwner());
+      oldt.setOwnerType(newt.getOwnerType());
       // Fully copy over the contents of the new SD into the old SD,
       // so we don't create an extra SD in the metastore db that has no references.
       MColumnDescriptor oldCD = null;
diff --git a/metastore/src/model/org/apache/hadoop/hive/metastore/model/MTable.java b/metastore/src/model/org/apache/hadoop/hive/metastore/model/MTable.java
index 2a78ce9..fa728e9 100644
--- a/metastore/src/model/org/apache/hadoop/hive/metastore/model/MTable.java
+++ b/metastore/src/model/org/apache/hadoop/hive/metastore/model/MTable.java
@@ -27,6 +27,7 @@
   private MDatabase database;
   private MStorageDescriptor sd;
   private String owner;
+  private String ownerType;
   private int createTime;
   private int lastAccessTime;
   private int retention;
@@ -43,6 +44,7 @@ public MTable() {}
    * @param database
    * @param sd
    * @param owner
+   * @param ownerType
    * @param createTime
    * @param lastAccessTime
    * @param retention
@@ -52,7 +54,7 @@ public MTable() {}
    * @param viewExpandedText
    * @param tableType
    */
-  public MTable(String tableName, MDatabase database, MStorageDescriptor sd, String owner,
+  public MTable(String tableName, MDatabase database, MStorageDescriptor sd, String owner, String ownerType,
       int createTime, int lastAccessTime, int retention, List<MFieldSchema> partitionKeys,
       Map<String, String> parameters,
       String viewOriginalText, String viewExpandedText, String tableType) {
@@ -60,6 +62,7 @@ public MTable(String tableName, MDatabase database, MStorageDescriptor sd, Strin
     this.database = database;
     this.sd = sd;
     this.owner = owner;
+    this.ownerType = ownerType;
     this.createTime = createTime;
     this.setLastAccessTime(lastAccessTime);
     this.retention = retention;
@@ -71,6 +74,20 @@ public MTable(String tableName, MDatabase database, MStorageDescriptor sd, Strin
   }
 
   /**
+   * @return the owner type
+   */
+  public String getOwnerType() {
+    return ownerType;
+  }
+
+  /**
+   * @param ownerType the owner type to set
+   */
+  public void setOwnerType(String ownerType) {
+    this.ownerType = ownerType;
+  }
+
+  /**
    * @return the tableName
    */
   public String getTableName() {
diff --git a/metastore/src/model/package.jdo b/metastore/src/model/package.jdo
index 66cd454..38e7c9c 100644
--- a/metastore/src/model/package.jdo
+++ b/metastore/src/model/package.jdo
@@ -152,6 +152,9 @@
       <field name="owner">
         <column name="OWNER" length="767" jdbc-type="VARCHAR"/>
       </field>
+      <field name="ownerType">
+        <column name="OWNER_TYPE" length="10" jdbc-type="VARCHAR" allows-null="true"/>
+      </field>
       <field name="createTime">
         <column name="CREATE_TIME" jdbc-type="integer"/>
       </field>
diff --git a/metastore/src/test/org/apache/hadoop/hive/metastore/TestObjectStore.java b/metastore/src/test/org/apache/hadoop/hive/metastore/TestObjectStore.java
index ae07189..42dbfa2 100644
--- a/metastore/src/test/org/apache/hadoop/hive/metastore/TestObjectStore.java
+++ b/metastore/src/test/org/apache/hadoop/hive/metastore/TestObjectStore.java
@@ -326,11 +326,21 @@ public void testTableOps() throws MetaException, InvalidObjectException, NoSuchO
     Assert.assertEquals(TABLE1, tables.get(0));
 
     Table newTbl1 = new Table("new" + TABLE1, DB1, "owner", 1, 2, 3, sd, null, params, "viewOriginalText", "viewExpandedText", "MANAGED_TABLE");
+
+    // Change different fields and verify they were altered
+    newTbl1.setOwner("role1");
+    newTbl1.setOwnerType(PrincipalType.ROLE);
+
     objectStore.alterTable(DB1, TABLE1, newTbl1);
     tables = objectStore.getTables(DB1, "new*");
     Assert.assertEquals(1, tables.size());
     Assert.assertEquals("new" + TABLE1, tables.get(0));
 
+    // Verify fields were altered during the alterTable operation
+    Table alteredTable = objectStore.getTable(DB1, "new" + TABLE1);
+    Assert.assertEquals("Owner of table was not altered", newTbl1.getOwner(), alteredTable.getOwner());
+    Assert.assertEquals("Owner type of table was not altered", newTbl1.getOwnerType(), alteredTable.getOwnerType());
+
     objectStore.dropTable(DB1, "new" + TABLE1);
     tables = objectStore.getAllTables(DB1);
     Assert.assertEquals(0, tables.size());
-- 
1.7.9.5

